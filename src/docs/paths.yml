paths:
  /products:
    post:
      tags: 
      - Products
      summary: Registro de producto nuevo en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyProduct'
        required: true
      responses:
        200:
          description: Se registró el producto correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: Error de validación de esquema
          $ref: '#/components/schema/ValidationSchemaError'
        500:
          description: Error de servidor
          $ref: '#/components/schema/NotFound'
    get:
      tags:
      - Products
      summary: Lista de productos en la base de datos
      responses:
        200:
          description: Lista de productos
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/GetAllProducts'
        500:
          description: Error de servidor
          $ref: '#/components/schema/NotFound'

  /products/{id}:
    get:
      tags:
      - Products
      summary: Obtener detalles de un producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Product'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/NotFound'
    put:
      tags:
      - Products
      summary: Editar producto
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a editar
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schema/BodyProduct'
        required: true
      responses:
        200:
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Product'
        404:
          description: No se encontró el producto con ID {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/NotFound'
    delete:
      tags:
      - Products
      summary: Eliminar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/DeleteById'
        404:
          description: No se encontró el producto con ID {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/NotFound'

  /users/register:
    post:
      tags: 
      - Users
      summary: Registro de usuario nuevo en la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/Users'
        required: true
      responses:
        200:
          description: Se registró el usuario correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/User'
        404:
          description: Error de validación de esquema
          $ref: '#/components/schema/Users/ValidationSchemaError'
        500:
          description: Error de servidor
          $ref: '#/components/schema/Users/NotFound'
  /users/dto/{id}:
    get:
      tags:
      - Users
      summary: Obtener DTO de usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        200:
          description: DTO de usuario obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/UserDto'

  /users/login:     
    post:
      tags: 
      - Users
      summary: Login de usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schema/Login'
        required: true
      responses:
        200:
          description: Usuario logueado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Users/Login'
        404:
          description: Error de validación de esquema
          $ref: '#/components/schema/Users/ValidationSchemaError'
        500:
          description: Error de servidor
          $ref: '#/components/schema/Users/NotFound'

  